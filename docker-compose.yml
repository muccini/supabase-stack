services:
  # PostgreSQL com Vector
  postgres:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgREST API
  rest:
    image: postgrest/postgrest:latest
    environment:
      PGRST_DB_URI: postgresql://postgres:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/postgres
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters-long}
    expose:
      - "3000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Supabase Studio (Opcional - Interface Admin)
  studio:
    image: supabase/studio:latest
    environment:
      SUPABASE_URL: http://rest:3000
      SUPABASE_REST_URL: http://rest:3000/
      SUPABASE_ANON_KEY: ${ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9}
      STUDIO_PG_META_URL: http://rest:3000/
    expose:
      - "3000"
    depends_on:
      - rest
    restart: unless-stopped

volumes:
  postgres_data:
